/*
 * Copyright 2015 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'org.asciidoctor.gradle.asciidoctor' version '1.5.1'
}

asciidoctor {
    separateOutputDirs = false
}

tasks.create('api', Javadoc) {
    group "manual"
    description "Generate combined Javadoc for all published modules"

    destinationDir = file("$buildDir/api")

    Set<Project> publishedProjects = publishedModules.collect { project(it) }.findAll { it != project }

    source publishedProjects.javadoc.source
    classpath = files(publishedProjects.javadoc.classpath)


    configure(options) {
        use = true
        links "http://docs.oracle.com/javase/8/docs/api/"
        windowTitle "MiniProfiler JVM API ($project.version)"
        docTitle "MiniProfiler JVM API ($project.version)"
    }
}

tasks.create('packageManual', Sync) {
    group "manual"
    description "Brings together manual and API reference"

    into "$buildDir/manual"
    from tasks.asciidoctor

    into("api") {
        from api
    }
}

tasks.create('openApi') {
    dependsOn tasks.packageManual
    group "manual"
    description "Builds the API reference, then opens it in your web browser"

    doLast {
        new java.awt.Desktop().browse(file("$packageManual.destinationDir/api/index.html").toURI())
    }
}

tasks.create('openManual') {
    dependsOn tasks.packageManual
    group "manual"
    description "Builds the manual, then opens it in your web browser"

    doLast {
        new java.awt.Desktop().browse(file("$packageManual.destinationDir/index.html").toURI())
    }
}

tasks.create('manualZip', Zip) {
    from tasks.packageManual
}

artifacts {
    archives manualZip
}

modifyPom { pom ->
    pom.artifactId = 'miniprofiler-manual'
    pom.project {
        name "MiniProfiler Manual"
        description "The manual for MiniProfiler JVM"
    }
}
