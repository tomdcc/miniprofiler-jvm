/*
 * Copyright 2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id "com.github.johnrengelman.shadow" version "6.1.0"
}

apply from: "$rootDir/gradle/javaModule.gradle"

configurations {
    bundled { }

}

project.sourceSets.all { sourceSet ->
    sourceSet.compileClasspath += configurations.bundled
    sourceSet.runtimeClasspath += configurations.bundled
}

dependencies {
    compileOnly commonDependencies.servletApi
    compileOnly commonDependencies.ehcache

	// for profiling eclipselink-generated sql
    compileOnly commonDependencies.eclipselink

	// for profiling hibernate-generated sql
    compileOnly commonDependencies.hibernate

    bundled commonDependencies.jsonSimple

    testImplementation "com.fasterxml.jackson.core:jackson-databind:${commonVersions.jackson}"
    testRuntimeOnly commonDependencies.slf4jApi

	// needed since we're excluding ehcache's deps and spock falls over otherwise
    testRuntimeOnly commonDependencies.jta
}

processResources {
	from(sourceSets.main.resources.srcDirs) {
		include '**/miniprofiler-version.txt'
		filter(ReplaceTokens, tokens: [
			"version": version
		])
	}
    inputs.property("version", version)
}


// include hibernate builder source, since it's LGPL and we don't want to add any
// extra burden on people who might be bundling this library in
jar {
	from(sourceSets.main.allJava) { include 'io/jdev/miniprofiler/sql/hibernate/*' }
    archiveClassifier.set('plain')
}

// remove plain jar form publishing
configurations.runtime.artifacts.clear()

shadowJar {
    archiveClassifier.set('')
    configurations = [project.configurations.bundled]
    relocate 'org.json.simple', 'io.jdev.miniprofiler.shadowed.org.json.simple'
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            pom {
                name = 'MiniProfiler JVM Core'
                description = 'MiniProfiler JVM is an implementation of the StackExchange MiniProfiler for the JVM. It provides easily accessible profiling information while developing a web-based app.'
            }
        }
    }
}

