/*
 * Copyright 2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java'
apply plugin: 'groovy'
apply from: "$rootDir/gradle/checkstyle.gradle"
apply from: "$rootDir/gradle/codenarc.gradle"
apply plugin: 'idea'

targetCompatibility = '1.8'
sourceCompatibility = '1.8'

idea {
    module {
        jdkName = '1.8'
    }
}

repositories {
    jcenter()
}

dependencies {
    testCompile commonDependencies.groovy
    testCompile commonDependencies.spock
    testImplementation commonDependencies.junitJupiter
    testRuntime commonDependencies.logback
}

project.tasks.withType(Test).configureEach {
    useJUnitPlatform()

    testLogging {
        exceptionFormat = 'full'
    }

    // Always run tests in the IDE
    if (Boolean.getBoolean('idea.active')) {
        outputs.upToDateWhen { false }
        outputs.doNotCacheIf('Running in IDE') { true }
    }
}

sourceSets {
    test {
        compileClasspath += configurations.compileOnly
        runtimeClasspath += configurations.compileOnly
    }
}

if (project.path in publishedModules) {

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    artifacts {
        archives jar
        archives javadocJar
        archives sourcesJar
    }

}
