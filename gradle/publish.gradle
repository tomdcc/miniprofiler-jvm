/*
 * Copyright 2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'base'
apply plugin: 'maven'
apply plugin: 'signing'

signing {
    sign configurations.archives
    required { !isSnapshot && gradle.taskGraph.hasTask(uploadArchives) }
}

apply from: "$rootDir/gradle/pom.gradle"

uploadArchives { task ->
    repositories.mavenDeployer {
        if(!isSnapshot) {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
        }
        gradle.taskGraph.whenReady { taskGraph ->
            if (taskGraph.hasTask(task)) {
                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: sonatypeOssUsername, password: sonatypeOssPassword)
                }
                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: sonatypeOssUsername, password: sonatypeOssPassword)
                }
            }
        }
    }
}

task uploadSnapshots {
    doLast {
        if (!isSnapshot) {
            println "Not uploading snapshot as not a snapshot version"
        }
    }
}
if(isSnapshot) {
    uploadSnapshots.dependsOn(uploadArchives)
}
